name: Build

on:
  push:
    branches: [master]
    paths:
      - "Cargo.toml"
      - "src/**"
      - "ts/**"
      - ".github/workflows/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    env:
      GH_ACTIONS: true
      RUST_BACKTRACE: full

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Setup deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Install required build packages (linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install libdbus-1-dev pkg-config libdbus-1-3

      - name: Log versions
        run: |
          deno --version
          rustc --version
          cargo --version

      - name: Build
        run: cargo build --verbose --release --locked

      - name: Run tests (unix)
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macOS')
        env:
          PLUGIN_URL: ./target/release/
        run: deno test --unstable --allow-all ./tests/*.ts
      - name: Run tests (windows)
        if: startsWith(matrix.os, 'windows')
        env:
          PLUGIN_URL: ./target/release/
        shell: bash
        run: deno test --unstable --allow-all ./tests/*.ts

      - name: Release Plugin
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "deno_notify release"
          draft: true
          files: |
            ./target/release/libdeno_notify.dylib
            ./target/release/libdeno_notify.so
            ./target/release/deno_notify.dll
